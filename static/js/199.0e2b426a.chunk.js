"use strict";(self.webpackChunksilja_demo=self.webpackChunksilja_demo||[]).push([[199],{72963:(t,r,e)=>{e.d(r,{C:()=>l,G:()=>d,a:()=>h,b:()=>u,d:()=>i,h:()=>p});var a=e(64572),o=e(61618),s=e(93155),n=e(6222),c=e(60101);function i(t,r){return(0,o.al)(o.bl.parse(t.abi),r)}function p(t,r){return t in r.readContract.functions}class l{constructor(t,r,e){(0,a.Z)(this,"featureName",o.d0.name),(0,a.Z)(this,"set",(0,s.c)((async t=>{const r=await this._parseAndUploadMetadata(t),e=this.contractWrapper;if(this.supportsContractMetadata(e))return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setContractURI",args:[r],parse:t=>({receipt:t,data:this.get})});throw new o.x(o.d0)}))),(0,a.Z)(this,"update",(0,s.c)((async t=>await this.set.prepare({...await this.get(),...t})))),this.contractWrapper=t,this.schema=r,this.storage=e}parseOutputMetadata(t){return this.schema.output.parseAsync(t)}parseInputMetadata(t){return this.schema.input.parseAsync(t)}async get(){let t;if(this.supportsContractMetadata(this.contractWrapper)){const r=await this.contractWrapper.read("contractURI",[]);r&&r.includes("://")&&(t=await this.storage.downloadJSON(r))}if(!t)try{var r,e;let s,n,c;try{p("name",this.contractWrapper)&&(s=await this.contractWrapper.read("name",[]))}catch(a){}try{p("symbol",this.contractWrapper)&&(n=await this.contractWrapper.read("symbol",[]))}catch(a){}try{c=await(0,o.J)(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options)}catch(a){}t={name:s||(null===(r=c)||void 0===r?void 0:r.name),symbol:n,description:null===(e=c)||void 0===e?void 0:e.info.title}}catch(s){throw new Error("Could not fetch contract metadata")}return this.parseOutputMetadata(t)}async _parseAndUploadMetadata(t){const r=await this.parseInputMetadata(t);return this.storage.upload(r)}supportsContractMetadata(t){return i(t,"ContractMetadata")}}class h{constructor(t){this.contractWrapper=t}addTransactionListener(t){this.contractWrapper.addListener(o.a$.Transaction,t)}removeTransactionListener(t){this.contractWrapper.off(o.a$.Transaction,t)}addEventListener(t,r){const e=this.contractWrapper.readContract.interface.getEvent(t),a={address:this.contractWrapper.address,topics:[this.contractWrapper.readContract.interface.getEventTopic(e)]},o=t=>{const e=this.contractWrapper.readContract.interface.parseLog(t);r(this.toContractEvent(e.eventFragment,e.args,t))};return this.contractWrapper.getProvider().on(a,o),()=>{this.contractWrapper.getProvider().off(a,o)}}listenToAllEvents(t){const r={address:this.contractWrapper.address},e=r=>{try{const e=this.contractWrapper.readContract.interface.parseLog(r);t(this.toContractEvent(e.eventFragment,e.args,r))}catch(e){console.error("Could not parse event:",r,e)}};return this.contractWrapper.getProvider().on(r,e),()=>{this.contractWrapper.getProvider().off(r,e)}}removeEventListener(t,r){const e=this.contractWrapper.readContract.interface.getEvent(t);this.contractWrapper.readContract.off(e.name,r)}removeAllListeners(){this.contractWrapper.readContract.removeAllListeners();const t={address:this.contractWrapper.address};this.contractWrapper.getProvider().removeAllListeners(t)}async getAllEvents(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{fromBlock:0,toBlock:"latest",order:"desc"};const r=(await this.contractWrapper.readContract.queryFilter({},t.fromBlock,t.toBlock)).sort(((r,e)=>"desc"===t.order?e.blockNumber-r.blockNumber:r.blockNumber-e.blockNumber));return this.parseEvents(r)}async getEvents(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{fromBlock:0,toBlock:"latest",order:"desc"};const e=this.contractWrapper.readContract.interface.getEvent(t),a=r.filters?e.inputs.map((t=>r.filters[t.name])):[],o=this.contractWrapper.readContract.filters[e.name](...a),s=(await this.contractWrapper.readContract.queryFilter(o,r.fromBlock,r.toBlock)).sort(((t,e)=>"desc"===r.order?e.blockNumber-t.blockNumber:t.blockNumber-e.blockNumber));return this.parseEvents(s)}parseEvents(t){return t.map((t=>{const r=Object.fromEntries(Object.entries(t).filter((t=>"function"!==typeof t[1]&&"args"!==t[0])));if(t.args){const e=Object.entries(t.args),a=e.slice(e.length/2,e.length),o={};for(const[t,r]of a)o[t]=r;return{eventName:t.event||"",data:o,transaction:r}}return{eventName:t.event||"",data:{},transaction:r}}))}toContractEvent(t,r,e){const a=Object.fromEntries(Object.entries(e).filter((t=>"function"!==typeof t[1]&&"args"!==t[0]))),o={};return t.inputs.forEach(((t,e)=>{if(Array.isArray(r[e])){const a=t.components;if(a){const s=r[e];if("tuple[]"===t.type){const r=[];for(let t=0;t<s.length;t++){const e=s[t],o={};for(let t=0;t<a.length;t++){o[a[t].name]=e[t]}r.push(o)}o[t.name]=r}else{const r={};for(let t=0;t<a.length;t++){r[a[t].name]=s[t]}o[t.name]=r}}}else o[t.name]=r[e]})),{eventName:t.name,data:o,transaction:a}}}class d{constructor(t){this.contractWrapper=t}async gasCostOf(t,r){const[e,a]=await Promise.all([this.contractWrapper.getProvider().getGasPrice(),this.contractWrapper.estimateGas(t,r)]);return n.formatEther(a.mul(e))}async gasLimitOf(t,r){return this.contractWrapper.estimateGas(t,r)}async currentGasPriceInGwei(){const t=await this.contractWrapper.getProvider().getGasPrice();return n.formatUnits(t,"gwei")}}class u{constructor(t,r,e){(0,a.Z)(this,"featureName",o.d1.name),(0,a.Z)(this,"set",(0,s.c)((async t=>i(this.contractWrapper,"AppURI")?s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAppURI",args:[t]}):await this.metadata.update.prepare({app_uri:t})))),this.contractWrapper=t,this.metadata=r,this.storage=e}async get(){return i(this.contractWrapper,"AppURI")?await this.contractWrapper.read("appURI",[]):(0,c.ov)((await this.metadata.get()).app_uri||"",this.storage.getGatewayUrls())}}},40199:(t,r,e)=>{e.d(r,{C:()=>p});var a=e(64572),o=e(44554),s=e(61618),n=e(72963),c=e(93155),i=e(59085);class p{constructor(t,r){(0,a.Z)(this,"featureName",s.d2.name),(0,a.Z)(this,"setAll",(0,c.c)((async t=>{const r=new i.C(this.contractWrapper),e=Object.keys(t);(0,o.Z)(e.length,"you must provide at least one role to set"),(0,o.Z)(e.every((t=>this.roles.includes(t))),"this contract does not support the given role");const a=await this.getAll(),n=[],p=e.sort((t=>"admin"===t?1:-1));for(let o=0;o<p.length;o++){var l,h;const e=p[o],[c,i]=await Promise.all([Promise.all((null===(l=t[e])||void 0===l?void 0:l.map((t=>(0,s.aO)(t))))||[]),Promise.all((null===(h=a[e])||void 0===h?void 0:h.map((t=>(0,s.aO)(t))))||[])]),d=c.filter((t=>!i.includes(t))),u=i.filter((t=>!c.includes(t)));if(d.length&&d.forEach((t=>{n.push(r.encode("grantRole",[(0,s.H)(e),t]))})),u.length){(await Promise.all(u.map((t=>this.getRevokeRoleFunctionName(t))))).forEach(((t,a)=>n.push(r.encode(t,[(0,s.H)(e),u[a]]))))}}return c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[n]})}))),(0,a.Z)(this,"grant",(0,c.c)((async(t,r)=>{(0,o.Z)(this.roles.includes(t),'this contract does not support the "'.concat(t,'" role'));const e=await(0,s.aO)(r);return c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"grantRole",args:[(0,s.H)(t),e]})}))),(0,a.Z)(this,"revoke",(0,c.c)((async(t,r)=>{(0,o.Z)(this.roles.includes(t),'this contract does not support the "'.concat(t,'" role'));const e=await(0,s.aO)(r),a=await this.getRevokeRoleFunctionName(e);return c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:a,args:[(0,s.H)(t),e]})}))),this.contractWrapper=t,this.roles=r}async getAll(){(0,o.Z)(this.roles.length,"this contract has no support for roles");const t={},r=Object.entries(this.roles);return(await Promise.all(r.map((t=>{let[,r]=t;return this.get(r)})))).forEach(((e,a)=>t[r[a][1]]=e)),t}async get(t){(0,o.Z)(this.roles.includes(t),'this contract does not support the "'.concat(t,'" role'));const r=this.contractWrapper;if((0,n.h)("getRoleMemberCount",r)&&(0,n.h)("getRoleMember",r)){const e=(0,s.H)(t),a=(await r.read("getRoleMemberCount",[e])).toNumber();return await Promise.all(Array.from(Array(a).keys()).map((t=>r.read("getRoleMember",[e,t]))))}throw new Error("Contract does not support enumerating roles. Please implement IPermissionsEnumerable to unlock this functionality.")}async verify(t,r){await Promise.all(t.map((async t=>{const[e,a]=await Promise.all([this.get(t),(0,s.aO)(r)]);if(!e.map((t=>t.toLowerCase())).includes(a.toLowerCase()))throw new s.o(a,t)})))}async getRevokeRoleFunctionName(t){const[r,e]=await Promise.all([(0,s.aO)(t),this.contractWrapper.getSignerAddress()]);return e.toLowerCase()===r.toLowerCase()?"renounceRole":"revokeRole"}}}}]);
//# sourceMappingURL=199.0e2b426a.chunk.js.map