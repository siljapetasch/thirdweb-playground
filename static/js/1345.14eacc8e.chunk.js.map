{"version":3,"file":"static/js/1345.14eacc8e.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js","../node_modules/@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js"],"sourcesContent":["function normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { utils } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-66bcf235.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport { E as EmbeddedWalletSdk, U as UserWalletStatus, c as AuthProvider } from '../../../../dist/embedded-wallet-2a2f4a5e.browser.esm.js';\nimport 'eventemitter3';\nimport '@paperxyz/sdk-common-utilities';\nimport 'ethers/lib/utils';\n\nvar _embeddedWalletSdk = /*#__PURE__*/new WeakMap();\nvar _signer = /*#__PURE__*/new WeakMap();\nclass EmbeddedWalletConnector extends Connector {\n  constructor(options) {\n    super();\n    _defineProperty(this, \"id\", walletIds.paper);\n    _defineProperty(this, \"name\", \"Embedded Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"user\", null);\n    _classPrivateFieldInitSpec(this, _embeddedWalletSdk, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _signer, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        await this.onDisconnect();\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.options.chains.findIndex(c => c.chainId === id) === -1;\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      this.emit(\"disconnect\");\n    });\n    this.options = options;\n  }\n  getEmbeddedWalletSDK() {\n    if (!_classPrivateFieldGet(this, _embeddedWalletSdk)) {\n      _classPrivateFieldSet(this, _embeddedWalletSdk, new EmbeddedWalletSdk({\n        clientId: this.options.clientId,\n        chain: \"Ethereum\",\n        onAuthSuccess: this.options.onAuthSuccess\n      }));\n    }\n    return _classPrivateFieldGet(this, _embeddedWalletSdk);\n  }\n  async connect(args) {\n    // backwards compatibility - options should really be required here\n    if (!args) {\n      // default to iframe flow\n      const result = await this.authenticate({\n        strategy: \"iframe\"\n      });\n      if (!result.user) {\n        throw new Error(\"Error connecting User\");\n      }\n      this.user = result.user;\n    } else {\n      if (!args.authResult) {\n        throw new Error(\"Missing authData - call authenticate() first with your authentication strategy\");\n      }\n      if (!args.authResult.user) {\n        throw new Error(\"Missing authData.user - call authenticate() first with your authentication strategy\");\n      }\n      this.user = args.authResult.user;\n    }\n    if (args?.chainId) {\n      this.switchChain(args.chainId);\n    }\n    return this.getAddress();\n  }\n  async disconnect() {\n    const paper = _classPrivateFieldGet(this, _embeddedWalletSdk);\n    await paper?.auth.logout();\n    _classPrivateFieldSet(this, _signer, undefined);\n    _classPrivateFieldSet(this, _embeddedWalletSdk, undefined);\n    this.user = null;\n  }\n  async getAddress() {\n    if (!this.user) {\n      throw new Error(\"Embedded Wallet is not connected\");\n    }\n    return this.user.walletAddress;\n  }\n  async isConnected() {\n    try {\n      const addr = await this.getAddress();\n      return !!addr;\n    } catch (e) {\n      return false;\n    }\n  }\n  async getProvider() {\n    const signer = await this.getSigner();\n    if (!signer.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    return signer.provider;\n  }\n  async getSigner() {\n    if (_classPrivateFieldGet(this, _signer)) {\n      return _classPrivateFieldGet(this, _signer);\n    }\n    const user = await this.getUser();\n    const signer = await user?.wallet.getEthersJsSigner({\n      rpcEndpoint: this.options.chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\n    });\n\n    if (!signer) {\n      throw new Error(\"Signer not found\");\n    }\n    _classPrivateFieldSet(this, _signer, signer);\n    return signer;\n  }\n  async isAuthorized() {\n    return false;\n  }\n  async switchChain(chainId) {\n    const chain = this.options.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(\"Chain not configured\");\n    }\n    try {\n      // update chain in wallet\n      await this.user?.wallet.setChain({\n        chain: \"Ethereum\"\n      }); // just pass Ethereum no matter what chain we are going to connect\n      // update signer\n      _classPrivateFieldSet(this, _signer, await this.user?.wallet.getEthersJsSigner({\n        rpcEndpoint: chain.rpc[0] || \"\"\n      }));\n      this.emit(\"change\", {\n        chain: {\n          id: chainId,\n          unsupported: false\n        }\n      });\n    } catch (e) {\n      console.warn(\"Failed to switch chain\", e);\n    }\n  }\n  async setupListeners() {\n    return Promise.resolve();\n  }\n  updateChains(chains) {\n    this.options.chains = chains;\n  }\n  async getUser() {\n    if (!this.user || !this.user.wallet || typeof this.user.wallet.getEthersJsSigner !== \"function\") {\n      const embeddedWalletSdk = this.getEmbeddedWalletSDK();\n      const user = await embeddedWalletSdk.getUser();\n      switch (user.status) {\n        case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED:\n          {\n            this.user = user;\n            break;\n          }\n      }\n    }\n    return this.user;\n  }\n  async getEmail() {\n    // implicit call to set the user\n    await this.getSigner();\n    if (!this.user) {\n      throw new Error(\"No user found, Embedded Wallet is not connected\");\n    }\n    return this.user.authDetails.email;\n  }\n  async getRecoveryInformation() {\n    // implicit call to set the user\n    await this.getSigner();\n    if (!this.user) {\n      throw new Error(\"No user found, Embedded Wallet is not connected\");\n    }\n    return this.user.authDetails;\n  }\n  async sendVerificationEmail(_ref) {\n    let {\n      email\n    } = _ref;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendEmailLoginOtp({\n      email\n    });\n  }\n  async authenticate(params) {\n    const ewSDK = this.getEmbeddedWalletSDK();\n    const strategy = params.strategy;\n    switch (strategy) {\n      case \"email_verification\":\n        {\n          return await ewSDK.auth.verifyEmailLoginOtp({\n            email: params.email,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"apple\":\n      // case \"facebook\":\n      case \"google\":\n        {\n          const oauthProvider = oauthStrategyToAuthProvider[strategy];\n          return ewSDK.auth.loginWithOauth({\n            oauthProvider,\n            closeOpenedWindow: params.closeOpenedWindow,\n            openedWindow: params.openedWindow\n          });\n        }\n      case \"jwt\":\n        {\n          return ewSDK.auth.loginWithCustomJwt({\n            jwt: params.jwt,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"iframe_email_verification\":\n        {\n          return ewSDK.auth.loginWithEmailOtp({\n            email: params.email\n          });\n        }\n      case \"iframe\":\n      case undefined:\n        {\n          return ewSDK.auth.loginWithModal();\n        }\n      default:\n        assertUnreachable(strategy);\n    }\n  }\n}\nfunction assertUnreachable(x) {\n  throw new Error(\"Invalid param: \" + x);\n}\nconst oauthStrategyToAuthProvider = {\n  google: AuthProvider.GOOGLE,\n  // facebook: AuthProvider.FACEBOOK,\n  apple: AuthProvider.APPLE\n};\n\nexport { EmbeddedWalletConnector };\n"],"names":["normalizeChainId","chainId","Number","parseInt","trim","substring","_embeddedWalletSdk","WeakMap","_signer","EmbeddedWalletConnector","Connector","constructor","options","super","_defineProperty","this","walletIds","paper","_classPrivateFieldInitSpec","writable","value","async","accounts","length","onDisconnect","emit","account","utils","id","unsupported","chains","findIndex","c","chain","getEmbeddedWalletSDK","_classPrivateFieldGet","_classPrivateFieldSet","EmbeddedWalletSdk","clientId","onAuthSuccess","connect","args","authResult","Error","user","result","authenticate","strategy","switchChain","getAddress","disconnect","auth","logout","undefined","walletAddress","isConnected","e","getProvider","signer","getSigner","provider","getUser","wallet","getEthersJsSigner","rpcEndpoint","rpc","isAuthorized","find","_this$user","_this$user2","setChain","console","warn","setupListeners","Promise","resolve","updateChains","embeddedWalletSdk","status","UserWalletStatus","LOGGED_IN_WALLET_INITIALIZED","getEmail","authDetails","email","getRecoveryInformation","sendVerificationEmail","_ref","sendEmailLoginOtp","params","ewSDK","verifyEmailLoginOtp","otp","verificationCode","recoveryCode","oauthProvider","oauthStrategyToAuthProvider","loginWithOauth","closeOpenedWindow","openedWindow","loginWithCustomJwt","jwt","encryptionKey","loginWithEmailOtp","loginWithModal","x","assertUnreachable","google","AuthProvider","GOOGLE","apple","APPLE"],"sourceRoot":""}